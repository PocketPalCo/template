name: Go CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
      - name: Install dependencies
        run: go mod download
      - name: Vet
        run: go vet ./...
      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
      - name: Test
        run: go test ./...
      - name: Build
        run: go build ./...

  integration-test:
    needs: build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: pocket-pal
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
      - name: Install dependencies
        run: go mod download
      - name: Install migrate
        run: go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
      - name: Run migrations
        run: migrate -path migrations -database "postgresql://postgres:postgres@localhost:5432/pocket-pal?sslmode=disable" up
      - name: Integration Tests
        env:
          SSV_DB_HOST: localhost
          SSV_DB_PORT: 5432
          SSV_DB_USER: postgres
          SSV_DB_PASSWORD: postgres
          SSV_DB_DATABASE: pocket-pal
        run: go test -tags=integration ./...
